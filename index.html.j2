<!doctype html>
<html lang="en" data-theme="dark">
<head>
  <meta charset="utf-8" />
  <title>{{ site_title or "versesvibez" }}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="robots" content="index,follow" />
  <meta name="description" content="Poetry & musings by Dami." />
  <link rel="alternate" type="application/rss+xml" title="{{ site_title or 'Feed' }}" href="{{ feed_url }}" />

  <!-- Friendly, legible fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&family=Playfair+Display:wght@600;700&display=swap" rel="stylesheet">

  <style>
    :root{
      --bg:#0b0c10; --card:#0f1117; --muted:#93a0b3; --text:#e6edf3;
      --brand:#8ab4ff; --accent:#ff9bd2; --accent2:#7ee787; --border:rgba(255,255,255,.08);
      --shadow:0 8px 28px rgba(0,0,0,.28),0 2px 10px rgba(0,0,0,.18);
    }
    [data-theme="light"]{
      --bg:#f7f8fb; --card:#ffffff; --muted:#6b7280; --text:#0f172a;
      --brand:#3b82f6; --accent:#f97316; --accent2:#10b981; --border:rgba(0,0,0,.08);
      --shadow:0 8px 28px rgba(0,0,0,.08),0 2px 10px rgba(0,0,0,.06);
    }

    *{box-sizing:border-box}
    html,body{margin:0;background:var(--bg);color:var(--text);
      font:16px/1.65 Inter, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, "Helvetica Neue", Arial;}
    h1,h2{font-family:"Playfair Display", serif}
    a{color:var(--brand);text-decoration:none} a:hover{text-decoration:underline}

    /* HERO */
    .hero{
      position:relative; overflow:hidden; border-bottom:1px solid var(--border);
      background:
        radial-gradient(1200px 500px at 20% -10%, rgba(138,180,255,.22), transparent 60%),
        radial-gradient(1200px 500px at 80% 0%, rgba(255,155,210,.18), transparent 60%);
    }
    .wrap{max-width:1100px;margin:0 auto;padding:28px 18px 28px}
    .header{display:flex;align-items:center;justify-content:space-between;gap:14px}
    .site-title a{color:var(--text);text-decoration:none;font-weight:800;font-size:22px}
    .tagline{color:var(--muted);font-size:13px;margin-top:4px}
    .controls{display:flex;gap:8px;flex-wrap:wrap}
    .btn{display:inline-flex;align-items:center;gap:8px;padding:10px 14px;border:1px solid var(--border);
      border-radius:12px;background:linear-gradient(180deg,rgba(255,255,255,.04),rgba(255,255,255,.02));
      color:var(--text);font-weight:600}
    .btn:hover{border-color:rgba(138,180,255,.5)}
    .search{flex:1;min-width:220px;display:flex;gap:8px;margin-top:14px}
    .search input{
      width:100%;padding:11px 12px;border-radius:12px;border:1px solid var(--border);background:var(--card);color:var(--text);
      outline:none
    }

    /* GRID */
    .content{padding:22px 18px 44px;max-width:1100px;margin:0 auto}
    .grid{display:grid;gap:18px;grid-template-columns:1fr}
    @media (min-width:720px){.grid{grid-template-columns:1fr 1fr}}
    @media (min-width:1100px){.grid{grid-template-columns:1fr 1fr 1fr}}

    article.card{
      border:1px solid var(--border); border-radius:18px; background:var(--card); overflow:hidden;
      display:flex;flex-direction:column; box-shadow:var(--shadow);
      transform:translateY(8px) scale(.98); opacity:0; will-change:transform,opacity;
      transition:transform .35s cubic-bezier(.2,.75,.2,1), opacity .35s;
    }
    article.card.show{transform:none; opacity:1}
    article.card:hover{transform:translateY(-4px) scale(1.005)}
    .thumb{aspect-ratio: 16/9; width:100%; background:linear-gradient(135deg, rgba(255,155,210,.25), rgba(138,180,255,.22))}
    .thumb img{width:100%;height:100%;object-fit:cover;display:block}

    .pad{padding:16px 14px 14px}
    h2{font-size:19px;margin:0 0 8px;line-height:1.3;
      display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}
    .meta{color:var(--muted);font-size:12px;display:flex;gap:10px;flex-wrap:wrap;margin-bottom:6px}
    .summary{color:color-mix(in oklab, var(--text) 80%, transparent);
      font-size:14px;display:-webkit-box;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden}
    .more{margin-top:8px;font-size:13px;font-weight:700}
    .empty,.error{margin:24px 0;border:1px dashed var(--border);border-radius:14px;padding:16px;background:rgba(255,255,255,.03);color:var(--muted)}

    footer{border-top:1px solid var(--border);padding:18px;color:var(--muted);font-size:12px;display:flex;justify-content:space-between;gap:10px;flex-wrap:wrap}

    /* MODAL (reading mode) */
    .modal{position:fixed;inset:0;background:rgba(0,0,0,.6);display:none;align-items:center;justify-content:center;padding:20px}
    .modal.open{display:flex}
    .modal-card{max-width:800px;max-height:80vh;overflow:auto;background:var(--card);border:1px solid var(--border);border-radius:16px;box-shadow:var(--shadow);padding:22px}
    .modal h2{margin:0 0 12px}
    .modal .meta{margin-bottom:14px}
    .modal .body{font-size:18px;line-height:1.75}
    .modal .close{position:sticky;top:0;float:right;margin:-6px -6px 6px 6px;border:1px solid var(--border);border-radius:10px;padding:6px 10px;background:transparent;color:var(--text);cursor:pointer}

    /* Light/dark toggle chip */
    .chip{border:1px solid var(--border);border-radius:999px;padding:8px 12px;background:var(--card);cursor:pointer}
  </style>
</head>
<body>
  <!-- HERO -->
  <section class="hero">
    <div class="wrap">
      <div class="header">
        <div>
          <div class="site-title"><a href="./">{{ site_title or "versesvibez" }}</a></div>
          <div class="tagline">poems â€¢ thoughts â€¢ little sparks âœ¨</div>
        </div>
        <div class="controls">
          <button id="themeToggle" class="chip" title="Toggle theme">ðŸŒ“</button>
          <a class="btn" href="{{ public_url.rstrip('/') + '/subscribe' }}" rel="noopener">Subscribe</a>
        </div>
      </div>

      <div class="search">
        <input id="q" type="search" placeholder="Search poems (title or text)â€¦" aria-label="Search poems" />
      </div>
    </div>
  </section>

  <!-- CONTENT -->
  <main class="content">
    <div id="status" class="empty">Loading poemsâ€¦</div>
    <section id="posts" class="grid" hidden>
      <!-- cards injected -->
    </section>
  </main>

  <footer>
    <div>Built from <a href="{{ feed_url }}">RSS</a>. No tracking.</div>
    <div>Generated {{ generated_at.strftime("%Y-%m-%d %H:%M UTC") if generated_at else "" }}</div>
  </footer>

  <!-- Reading mode modal -->
  <div id="modal" class="modal" aria-hidden="true">
    <div class="modal-card">
      <button class="close" id="modalClose">âœ•</button>
      <h2 id="mTitle"></h2>
      <div class="meta" id="mMeta"></div>
      <div class="body" id="mBody"></div>
    </div>
  </div>

  <script>
    // ======== Theme toggle (persist) ========
    (function(){
      const key = 'vv-theme';
      const saved = localStorage.getItem(key);
      if(saved) document.documentElement.setAttribute('data-theme', saved);
      document.getElementById('themeToggle').addEventListener('click', () => {
        const cur = document.documentElement.getAttribute('data-theme') || 'dark';
        const next = cur === 'dark' ? 'light' : 'dark';
        document.documentElement.setAttribute('data-theme', next);
        localStorage.setItem(key, next);
      });
    })();

    // ======== Config from backend ========
    const RSS_URL = {{ (feed_url or "https://versesvibez.substack.com/feed") | tojson }};
    let WORKER_BASE = {{ (rss_proxy_url or "") | tojson }}; // e.g. https://substack-proxy.X.workers.dev/?rss_url=
    const PUBLIC_BASE = "https://api.rss2json.com/v1/api.json?rss_url=";

    function normalizeBase(b){
      if(!b) return "";
      const hasParam = /[\?&]rss_url=/.test(b);
      if (hasParam) return b;
      const hasQuery = b.includes("?");
      if (!hasQuery) return b + "?rss_url=";
      if (!/[&?]$/.test(b)) b += "&";
      return b + "rss_url=";
    }
    WORKER_BASE = normalizeBase(WORKER_BASE);

    const statusEl = document.getElementById('status');
    const postsEl  = document.getElementById('posts');
    const qEl      = document.getElementById('q');

    // ======== Helpers ========
    function strip(html){
      const d=document.createElement('div'); d.innerHTML=html||'';
      d.querySelectorAll('.subscription-widget, .subscription-widget-wrap-editor, .button-wrapper').forEach(n=>n.remove());
      return d.textContent||d.innerText||'';
    }
    function firstImage(html){
      const d=document.createElement('div'); d.innerHTML=html||'';
      const img=d.querySelector('img'); if(img&&img.src) return img.src;
      const source=d.querySelector('source[srcset]');
      if(source){ const pick=(source.getAttribute('srcset')||'').split(',').map(s=>s.trim().split(' ')[0]).filter(Boolean)[0]; if(pick) return pick; }
      return '';
    }
    function readingTime(text){
      const words=(text.trim().match(/\S+/g)||[]).length;
      return `${Math.max(1, Math.round(words/200))} min read`;
    }

    function makeCard(item, idx){
      const date = item.pubDate ? new Date(item.pubDate) : null;
      const dateStr = date ? date.toLocaleDateString(undefined, {year:'numeric',month:'short',day:'numeric'}) : '';
      const html = item.content || item.description || '';
      const plain = strip(html);
      const img = firstImage(html);
      const snippet = plain.length>240 ? plain.slice(0,240)+'â€¦' : plain;
      const rtime = plain ? readingTime(plain) : '';

      const card=document.createElement('article');
      card.className='card';
      card.style.transitionDelay = `${Math.min(idx, 12) * 35}ms`;
      card.innerHTML = `
        ${img ? `<a class="thumb" href="${item.link}" target="_blank" rel="noopener"><img loading="lazy" src="${img}" alt=""></a>` : `<div class="thumb"></div>`}
        <div class="pad">
          <h2><a href="${item.link}" target="_blank" rel="noopener">${item.title || 'Untitled'}</a></h2>
          <div class="meta">${dateStr ? `<span>${dateStr}</span>`:''}${rtime?`<span>${rtime}</span>`:''}</div>
          <div class="summary">${snippet}</div>
          <div class="more"><a href="${item.link}" target="_blank" rel="noopener">Read on Substack â†’</a> &nbsp;â€¢&nbsp;
            <a href="#" data-read="1">Quick read</a>
          </div>
        </div>`;
      // Quick read (modal)
      card.querySelector('[data-read]')?.addEventListener('click', (e)=>{
        e.preventDefault();
        openModal(item.title, dateStr, html);
      });
      return card;
    }

    // ======== Modal (reading mode) ========
    const m = {
      el: document.getElementById('modal'),
      title: document.getElementById('mTitle'),
      meta: document.getElementById('mMeta'),
      body: document.getElementById('mBody'),
      close: document.getElementById('modalClose'),
    };
    function openModal(title, dateStr, html){
      m.title.textContent = title || 'Untitled';
      m.meta.textContent  = dateStr || '';
      // Keep basic formatting (paragraphs, br, strong, em, images)
      m.body.innerHTML = html || '';
      m.el.classList.add('open');
      m.el.setAttribute('aria-hidden','false');
    }
    function closeModal(){
      m.el.classList.remove('open');
      m.el.setAttribute('aria-hidden','true');
      m.body.innerHTML='';
    }
    m.close.addEventListener('click', closeModal);
    m.el.addEventListener('click', e=>{ if(e.target===m.el) closeModal(); });
    document.addEventListener('keydown', e=>{ if(e.key==='Escape') closeModal(); });

    // ======== Fetch + render (Worker â†’ Public fallback) ========
    async function fetchJSON(url){
      const r=await fetch(url,{credentials:"omit",cache:"no-store"});
      if(!r.ok) throw new Error('HTTP '+r.status);
      return r.json();
    }

    let ALL_ITEMS = [];

    async function load(){
      const workerURL = WORKER_BASE ? WORKER_BASE + encodeURIComponent(RSS_URL) : null;
      const publicURL = PUBLIC_BASE + encodeURIComponent(RSS_URL);
      const attempts = []; if(workerURL) attempts.push(workerURL); attempts.push(publicURL);

      for(const url of attempts){
        try{
          const data = await fetchJSON(url);
          const items = (data && Array.isArray(data.items)) ? data.items : [];
          if(items.length){
            ALL_ITEMS = items;
            statusEl.classList.add('hidden');
            postsEl.hidden = false;
            postsEl.innerHTML='';
            items.forEach((it,i)=> {
              const card=makeCard(it,i);
              postsEl.appendChild(card);
              queueMicrotask(()=>card.classList.add('show'));
            });
            return;
          }
        }catch(e){ /* try next */ }
      }
      statusEl.className='error';
      statusEl.textContent='Could not load poems right now. Please try again later.';
    }

    // ======== Search (client-only) ========
    qEl.addEventListener('input', ()=>{
      const q = qEl.value.trim().toLowerCase();
      const cards = postsEl.querySelectorAll('article.card');
      if(!q){ cards.forEach(c=>c.classList.remove('hidden')); return; }
      ALL_ITEMS.forEach((it, i)=>{
        const text = ((it.title||'') + ' ' + (strip(it.content||it.description||''))).toLowerCase();
        cards[i]?.classList.toggle('hidden', !text.includes(q));
      });
    });

    load();
  </script>
</body>
</html>
