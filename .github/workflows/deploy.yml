name: Build & Deploy (GitHub Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # once per day

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set env defaults
        shell: bash
        run: |
          # Your publication + feed
          FEED="${SUBSTACK_FEED:-${{ secrets.SUBSTACK_FEED }}}"
          if [ -z "$FEED" ]; then FEED="${{ vars.SUBSTACK_FEED }}"; fi
          if [ -z "$FEED" ]; then FEED="https://versesvibez.substack.com/feed"; fi
          echo "SUBSTACK_FEED=$FEED" >> "$GITHUB_ENV"

          PUB="${PUBLIC_SUBSTACK_URL:-${{ secrets.PUBLIC_SUBSTACK_URL }}}"
          if [ -z "$PUB" ]; then PUB="${{ vars.PUBLIC_SUBSTACK_URL }}"; fi
          if [ -z "$PUB" ]; then PUB="https://versesvibez.substack.com/"; fi
          echo "PUBLIC_SUBSTACK_URL=$PUB" >> "$GITHUB_ENV"

          # Proxy (BEST: your Cloudflare Worker). TEMP fallback: rss2json public API.
          PROXY="${RSS_PROXY_URL:-${{ secrets.RSS_PROXY_URL }}}"
          if [ -z "$PROXY" ]; then PROXY="${{ vars.RSS_PROXY_URL }}"; fi
          if [ -z "$PROXY" ]; then PROXY="https://api.rss2json.com/v1/api.json?rss_url="; fi
          echo "RSS_PROXY_URL=$PROXY" >> "$GITHUB_ENV"

      - name: Build site (templating only)
        run: python fetch.py

      # âœ… Copy static assets into the published artifact (dist)
      - name: Copy static assets into dist
        shell: bash
        run: |
          if [ -d static ]; then
            mkdir -p dist/static
            # Prefer rsync for clean sync if available; otherwise cp
            if command -v rsync >/dev/null 2>&1; then
              rsync -av --delete static/ dist/static/
            else
              rm -rf dist/static/* 2>/dev/null || true
              cp -r static/* dist/static/
            fi
          else
            echo "No ./static directory found; skipping copy" >&2
          fi

      # Optional but helpful: avoid Jekyll processing oddities on Pages
      - name: Add .nojekyll
        run: echo > dist/.nojekyll

      - name: Verify dist exists
        run: test -d dist && ls -la dist

      - name: Sanity check dist contents
        shell: bash
        run: |
          test -f dist/index.html
          if [ -d dist/static ]; then
            ls -la dist/static | sed 's/^/dist\/static\//'
            # Ensure critical files are present if you expect them
            test -f dist/static/styles.css || echo "WARN: dist/static/styles.css missing" >&2
            # Logos are optional; warn if absent
            [ -f dist/static/logo-light.png ] || echo "WARN: logo-light.png missing" >&2
            [ -f dist/static/logo-dark.png ] || echo "WARN: logo-dark.png missing" >&2
          else
            echo "WARN: dist/static directory not found" >&2
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4