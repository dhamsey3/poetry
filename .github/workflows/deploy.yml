name: Build & Deploy (GitHub Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # once per day (kinder to Substack)

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Playwright Chromium
        run: python -m playwright install --with-deps chromium

      - name: Set env defaults
        shell: bash
        run: |
          FEED="${SUBSTACK_FEED:-${{ secrets.SUBSTACK_FEED }}}"
          if [ -z "$FEED" ]; then FEED="${{ vars.SUBSTACK_FEED }}"; fi
          if [ -z "$FEED" ]; then FEED="https://versesvibez.substack.com/feed"; fi
          echo "SUBSTACK_FEED=$FEED" >> "$GITHUB_ENV"

          PUB="${PUBLIC_SUBSTACK_URL:-${{ secrets.PUBLIC_SUBSTACK_URL }}}"
          if [ -z "$PUB" ]; then PUB="${{ vars.PUBLIC_SUBSTACK_URL }}"; fi
          if [ -z "$PUB" ]; then PUB="https://versesvibez.substack.com/"; fi
          echo "PUBLIC_SUBSTACK_URL=$PUB" >> "$GITHUB_ENV"

          UA="${FETCH_UA:-${{ secrets.FETCH_UA }}}"
          if [ -z "$UA" ]; then UA="${{ vars.FETCH_UA }}"; fi
          if [ -z "$UA" ]; then UA="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"; fi
          echo "FETCH_UA=$UA" >> "$GITHUB_ENV"

          # Enable robust fallbacks + green builds when blocked
          echo "USE_PLAYWRIGHT=1" >> "$GITHUB_ENV"
          echo "SOFT_FAIL=1" >> "$GITHUB_ENV"
          echo "ALLOW_EMPTY=1" >> "$GITHUB_ENV"

      # Pull last deployed page to reuse if fetch fails
      - name: Try to fetch last deployed HTML (gh-pages)
        shell: bash
        run: |
          set -e
          git config --global init.defaultBranch gh-pages
          git clone --depth=1 --branch gh-pages "https://github.com/${{ github.repository }}.git" _prev || true
          if [ -f _prev/index.html ]; then
            mkdir -p dist
            cp _prev/index.html dist/index.previous.html
            echo "Found previous deployment; will use as fallback if fetch fails."
          else
            echo "No previous deployment found."
          fi

      - name: Build site
        run: python fetch.py

      - name: Verify dist exists
        run: test -d dist && ls -la dist

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
